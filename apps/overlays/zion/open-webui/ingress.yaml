# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: open-webui
#   namespace: open-webui
#   annotations:
#     kubernetes.io/ingress.class: "traefik"
#     # traefik.ingress.kubernetes.io/router.entrypoints: web
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     traefik.ingress.kubernetes.io/router.tls: "true"
#     # traefik.ingress.kubernetes.io/router.tls.certresolver: "cloudflare"
#     cert-manager.io/cluster-issuer: "cloudflare-clusterissuer"
# spec:
#   ingressClassName: traefik
#   rules:
#   - host: openwebui.milanchis.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: open-webui
#             port:
#               number: 80
#   # Optional TLS section
#   tls:
#     - hosts:
#         - openwebui.milanchis.com
#   #   secretName: openwebui-tls-secret

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: open-webui
  namespace: open-webui
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`openwebui.milanchis.com`) && PathPrefix(`/`)
      kind: Rule
      services:
        - name: zion-open-webui
          port: 80
      middlewares:
        - name: zion-open-webui-forward-headers
        - name: zion-open-webui-auth-headers
        - name: zion-open-webui-cors-middleware
    - match: Host(`openwebui.milanchis.com`) && PathPrefix(`/api`)
      kind: Rule
      services:
        - name: zion-open-webui
          port: 80
      middlewares:
        - name: zion-open-webui-forward-headers
        - name: zion-open-webui-auth-headers
        - name: zion-open-webui-cors-middleware
  tls:
    secretName: open-webui-certificate-secret
