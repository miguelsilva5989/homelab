apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: authentik
  namespace: authentik
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`authentik.milanchis.com`) && PathPrefix(`/`)
      kind: Rule
      services:
        - name: authentik-server
          port: 80
    - match: Host(`authentik.milanchis.com`) && PathPrefix(`/api`)
      kind: Rule
      services:
        - name: authentik-server
          port: 80
  tls:
    secretName: authentik-certificate-secret
    # If using a cert-manager ClusterIssuer with Cloudflare, the secret will be managed by cert-manager

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: authentik-ingress
#   namespace: authentik
#   annotations:
#     kubernetes.io/ingress.class: "traefik"
#     # traefik.ingress.kubernetes.io/router.entrypoints: web
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     traefik.ingress.kubernetes.io/router.tls: "true"
#     # traefik.ingress.kubernetes.io/router.tls.certresolver: cloudflare
#     cert-manager.io/cluster-issuer: "cloudflare-clusterissuer"
# spec:
#   ingressClassName: traefik
#   rules:
#   - host: authentik.milanchis.com   # YOUR domain/subdomain, pointed to your Traefik IP via Cloudflare A record
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: authentik-server
#             port:
#               number: 80
#       - path: /api
#         pathType: Prefix
#         backend:
#           service:
#             name: authentik-server
#             port:
#               number: 80
#   tls:
#   - hosts:
#     - authentik.milanchis.com
#     secretName: authentik-certificate-secret
