deployment:
  enabled: true
  kind: DaemonSet # to run on multiple nodes
  # replicas: 3 # match with number of workers
  annotations: {}
  podAnnotations: {}
  additionalContainers: []
  initContainers: []
  # tolerations:
  #   - key: "node-role.kubernetes.io/master"
  #     operator: "Exists"
  #     effect: "NoSchedule"

affinity: {}

authentik:
  existingSecret: authentik-credentials

server:
  ingress:
    ingressClassName: traefik
    enabled: true
    hosts:
      - authentik.milanchis.com
    # tls:
    #   - hosts:
    #     - authentik.milanchis.com
    #     # secretName: authentik-zion-tls
  containerPorts:
    # -- http container port
    http: 9000
    # -- https container port
    https: 9443
  env:
    - name: AUTHENTIK_REDIS__HOST
      value: authentik-redis-master
    - name: AUTHENTIK_POSTGRESQL__HOST
      value: authentik-postgresql
    - name: AUTHENTIK_POSTGRESQL__USER
      value: authentik
    - name: AUTHENTIK_POSTGRESQL__NAME
      value: authentik
    - name: AUTHENTIK_POSTGRESQL__PASSWORD
      valueFrom:
        secretKeyRef:
          name: authentik-credentials
          key: password
    - name: PG_PASS
      valueFrom:
        secretKeyRef:
          name: authentik-credentials
          key: password
    - name: AUTHENTIK_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: authentik-credentials
          key: authentikSecret

worker:
  # -- whether to enable worker resources
  enabled: true
  # -- authentik worker name
  name: worker
  # -- The number of worker pods to run
  replicas: 5
  env:
    - name: AUTHENTIK_REDIS__HOST
      value: authentik-redis-master
    - name: AUTHENTIK_POSTGRESQL__HOST
      value: authentik-postgresql
    - name: AUTHENTIK_POSTGRESQL__USER
      value: authentik
    - name: AUTHENTIK_POSTGRESQL__NAME
      value: authentik
    - name: AUTHENTIK_POSTGRESQL__PASSWORD
      valueFrom:
        secretKeyRef:
          name: authentik-credentials
          key: password
    - name: PG_PASS
      valueFrom:
        secretKeyRef:
          name: authentik-credentials
          key: password
    - name: AUTHENTIK_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: authentik-credentials
          key: authentikSecret


postgresql:
  enabled: true
  auth:
    # username: authentik-mike
    # database: authentik-db
    # password: "ThisIsNotASecurePassword"
    existingSecret: authentik-credentials

redis:
  enabled: true

# # add this block under the `authentik:` block in your values.yaml file
# # authentik:
# email:
#     # -- SMTP Server emails are sent from, fully optional
#     host: ""
#     port: 587
#     # -- SMTP credentials. When left empty, no authentication will be done.
#     username: ""
#     # -- SMTP credentials. When left empty, no authentication will be done.
#     password: ""
#     # -- Enable either use_tls or use_ssl. They can't be enabled at the same time.
#     use_tls: true
#     # -- Enable either use_tls or use_ssl. They can't be enabled at the same time.
#     use_ssl: false
#     # -- Connection timeout in seconds
#     timeout: 30
#     # -- Email 'from' address can either be in the format "foo@bar.baz" or "authentik <foo@bar.baz>"
#     from: "miguelsilva5989@gmail.com"
