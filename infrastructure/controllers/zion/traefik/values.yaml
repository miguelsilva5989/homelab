deployment:
  enabled: true
  kind: Deployment
  replicas: 2 # match with number of workers
  annotations: {}
  podAnnotations: {}
  additionalContainers: []
  initContainers: []
  # tolerations:
  #   - key: "node-role.kubernetes.io/master"
  #     operator: "Exists"
  #     effect: "NoSchedule"

# -- This example pod anti-affinity forces the scheduler to put traefik pods
# -- on nodes where no other traefik pods are scheduled.
# It should be used when hostNetwork: true to prevent port conflicts
# affinity:
#   podAntiAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#       - labelSelector:
#           matchLabels:
#             app.kubernetes.io/name: traefik
#             app.kubernetes.io/instance: traefik-traefik
#         topologyKey: kubernetes.io/hostname

service:
  enabled: true
  type: LoadBalancer
  annotations: {}
  labels: {}
  spec:
    loadBalancerIP: 10.69.69.1 # this should be an IP in the Kube-VIP range
  loadBalancerSourceRanges: []
  externalIPs: []

ingressClass:
  enabled: true
  isDefaultClass: true

ports:
  websecure:
    port: 8443
    exposedPort: 443
    tls:
      enabled: true
      certResolver: cloudflare # name of the resolver that we set below -> certificatesResolvers: -> **cloudflare**

ingressRoute:
  dashboard:
    enabled: false

persistence:
  enabled: true
  name: ssl-certs
  size: 1Gi
  path: /ssl-certs

env:
  - name: CF_API_EMAIL
    valueFrom:
      secretKeyRef:
        key: email
        name: cloudflare-credentials
  - name: CF_API_KEY
    valueFrom:
      secretKeyRef:
        key: apiKey
        name: cloudflare-credentials



certificatesResolvers:
  cloudflare:
    # Enable ACME (Let's Encrypt): automatic SSL.
    acme:
      
      # Email address used for registration.
      #
      # Required
      #
      email: "miguelsilva5989@gmail.com"

      # File or key used for certificates storage.
      #
      # Required
      #
      storage: "/ssl-certs/acme-cloudflare.json"

      # Use a TLS-ALPN-01 ACME challenge.
      #
      # Optional (but recommended)
      #
      # tlsChallenge:

      # Use a HTTP-01 ACME challenge.
      #
      # Optional
      #
      # httpChallenge:

        # EntryPoint to use for the HTTP-01 challenges.
        #
        # Required
        #
        # entryPoint: web

      # Use a DNS-01 ACME challenge rather than HTTP-01 challenge.
      # Note: mandatory for wildcard certificate generation.
      #
      # Optional
      #
      dnsChallenge:

        # DNS provider used.
        #
        # Required
        #
        provider: cloudflare

        # By default, the provider will verify the TXT DNS challenge record before letting ACME verify.
        # If delayBeforeCheck is greater than zero, this check is delayed for the configured duration in seconds.
        # Useful if internal networks block external DNS queries.
        #
        # Optional
        # Default: 0
        #
        # delayBeforeCheck: 0

        # Use following DNS servers to resolve the FQDN authority.
        #
        # Optional
        # Default: empty
        #
        resolvers:
        - "1.1.1.1:53"

